clear all


t_0 = 0;
t_1 = 5;
t_2 = 6;

%% minimum acceleration
A = [1 t_0 t_0^2 t_0^3 0 0 0 0;...
    1 t_1 t_1^2 t_1^3 0 0 0 0;...
    0 0 0 0 1 t_1 t_1^2 t_1^3;...
    0 0 0 0 1 t_2 t_2^2 t_2^3;...
    0 1 2*t_0 3*t_0^2 0 0 0 0;...
    0 0 0 0 0 1 2*t_2 3*t_2^2;...
    0 1 2*t_1 3*t_1^2 0 -1 -2*t_1 -3*t_1^2;...
    0 0 2 6*t_1 0 0 -2 -6*t_1];
A
X = [-1 0;...
    0 2;...
    0 2;...
    1 0;...
    -1 -5;...
    0 0;...
    0 0;...
    0 0];

C = A\X;

t_stamps = [0 5 6];
time = t_stamps(1):0.01:t_stamps(end);
pos = [];
vel=[];
acc=[];
path = [-1 0; 0 2; 1 0];
t_idx = 1;
for i = 1:length(time)
    t = time(i);
    if t < t_stamps(end)
        if t >= t_stamps(t_idx)
            t_idx = t_idx+1;
        end
    end
    S = [1 t t^2 t^3;...
        0 1 2*t 3*t^2;...
        0 0 2 6*t]*...
        C((t_idx-2)*4+1:(t_idx-2)*4+4,:);
    pos = [pos S(1,:)'];
    vel = [vel S(2,:)'];
    acc = [acc S(3,:)'];
end
figure(1)
clf
p_lims = max(max(abs(pos)));
plot(pos(1,:),pos(2,:),'k-')
hold on
plot(pos(1,1),pos(2,1),'bo')
plot(pos(1,end),pos(2,end),'ro')
grid on
axis equal
xlim([-p_lims p_lims])
ylim([-p_lims p_lims])
xlabel('x')
ylabel('y')
title('Minimum Acceleration Trajectory')
legend('Path','Beginning','End')

%% minimum jerk
A = [1 t_0 t_0^2 t_0^3   t_0^4    t_0^5    0 0   0      0        0         0;...
     1 t_1 t_1^2 t_1^3   t_1^4    t_1^5    0 0   0      0        0         0;...
     0 0   0     0       0        0        1 t_1 t_1^2  t_1^3    t_1^4     t_1^5;...
     0 0   0     0       0        0        1 t_2 t_2^2  t_2^3    t_2^4     t_2^5;...
     0 1   2*t_0 3*t_0^2 4*t_0^3  5*t_0^4  0 0   0      0        0         0;...
     0 0   0     0       0        0        0 1   2*t_2  3*t_2^2  4*t_2^3   5*t_2^4;...
     0 0   2     6*t_0   12*t_0^2 20*t_0^3 0 0   0      0        0         0;...
     0 0   0     0       0        0        0 0   2      6*t_2    12*t_2^2  20*t_2^3;...
     0 1   2*t_1 3*t_1^2 4*t_1^3  5*t_1^4  0 -1  -2*t_1 -3*t_1^2 -4*t_1^3  -5*t_1^4;...
     0 0   2     6*t_1   12*t_1^2 20*t_1^3 0 0   -2     -6*t_1   -12*t_1^2 -20*t_1^3;...
     0 0   0     6       24*t_1   60*t_1^2 0 0   0      -6       -24*t_1   -60*t_1^2;...
     0 0   0     0       24       120*t_1  0 0   0      0        -24       -120*t_1];
 
X = [-1 0;...
    0 2;...
    0 2;...
    1 0;...
    -1 -5;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0];
C = A\X;
%A(7,8)
%{d
t_stamps = [0 5 6];
time = t_stamps(1):0.01:t_stamps(end);
pos = [];
vel=[];
acc=[];
path = [-1 0; 0 2; 1 0];
t_idx = 1;
for i = 1:length(time)
    t = time(i);
    if t < t_stamps(end)
        if t >= t_stamps(t_idx)
            t_idx = t_idx+1;
        end
    end
    S = [1 t t^2 t^3 t^4 t^5;...
        0 1 2*t 3*t^2 4*t^3 5*t^4;...
        0 0 2 6*t 12*t^2 20*t^3]*...
        C((t_idx-2)*6+1:(t_idx-2)*6+6,:);
    pos = [pos S(1,:)'];
    vel = [vel S(2,:)'];
    acc = [acc S(3,:)'];
end
figure(2)
clf
p_lims = max(max(abs(pos)));
plot(pos(1,:),pos(2,:),'k-')
hold on
plot(pos(1,1),pos(2,1),'bo')
plot(pos(1,end),pos(2,end),'ro')
grid on
axis equal
xlim([-p_lims p_lims])
ylim([-p_lims p_lims])
xlabel('x')
ylabel('y')
title('Minimum Jerk Trajectory')
legend('Path','Beginning','End')


%% minimum snap
A_2 = [1 t_0 t_0^2 t_0^3   t_0^4    t_0^5    t_0^6        t_0^7       0 0   0         0           0           0           0           0;...
     1 t_1 t_1^2 t_1^3   t_1^4    t_1^5    t_1^6        t_1^7       0 0   0         0           0           0           0           0;...
     0 0   0     0       0        0        0            0           1 t_1 t_1^2     t_1^3       t_1^4       t_1^5       t_1^6       t_1^7;...
     0 0   0     0       0        0        0            0           1 t_2 t_2^2     t_2^3       t_2^4       t_2^5       t_2^6       t_2^7;...
     0 1   2*t_0 3*t_0^2 4*t_0^3  5*t_0^4  6*t_0^5      7*t_0^6     0 0   0         0           0           0           0           0;...
     0 0   0     0       0        0        0            0           0 1   2*t_2     3*t_2^2     4*t_2^3     5*t_2^4     6*t_2^5     7*t_2^6;...
     0 0   2     6*t_0   12*t_0^2 20*t_0^3 30*t_0^4     42*t_0^5    0 0   0         0           0           0           0           0;...
     0 0   0     0       0        0        0            0           0 0   2         6*t_2       12*t_2^2    20*t_2^3    30*t_2^4    42*t_2^5;...
     0 0   0     6       24*t_0   60*t_0^2 120*t_0^3    210*t_0^4   0 0   0         0           0           0           0           0;...
     0 0   0     0       0        0        0            0           0 0   0         6           24*t_2      60*t_2^2    120*t_2^3   210*t_2^4;...
     0 1   2*t_1 3*t_1^2 4*t_1^3  5*t_1^4  6*t_1^5      7*t_1^6     0 -1  -2*t_1    -3*t_1^2    -4*t_1^3    -5*t_1^4    -6*t_1^5    -7*t_1^6;...
     0 0   2     6*t_1   12*t_1^2 20*t_1^3 30*t_1^4     42*t_1^5    0 0   -2        -6*t_1      -12*t_1^2   -20*t_1^3   -30*t_1^4   -42*t_1^5 ;...
     0 0   0     6       24*t_1   60*t_1^2 120*t_1^3    210*t_1^4   0 0   0         -6          -24*t_1     -60*t_1^2   -120*t_1^3  -210*t_1^4 ;...
     0 0   0     0       24       120*t_1  360*t_1^2    840*t_1^3   0 0   0         0           -24         -120*t_1    -360*t_1^2  -840*t_1^3;...
     0 0   0     0       0        120      720*t_1      2520*t_1^2  0 0   0         0           0           -120        -720*t_1    -2520*t_1^2;...
     0 0   0     0       0        0        720          5040*t_1    0 0   0         0           0           0           -720        -5040*t_1];
 
 X = [-1 0;...
    0 2;...
    0 2;...
    1 0;...
    -1 -5;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0;...
    0 0];

C = A_2\X;

%{d
t_stamps = [0 5 6];
time = t_stamps(1):0.01:t_stamps(end);
pos = [];
vel=[];
acc=[];
path = [-1 0; 0 2; 1 0];
t_idx = 1;
for i = 1:length(time)
    t = time(i);
    if t < t_stamps(end)
        if t >= t_stamps(t_idx)
            t_idx = t_idx+1;
        end
    end
    S = [1 t t^2 t^3 t^4 t^5 t^6 t^7;...
        0 1 2*t 3*t^2 4*t^3 5*t^4 6*t^5 7*t^6;...
        0 0 2 6*t 12*t^2 20*t^3 30*t^4 42*t^5]*...
        C((t_idx-2)*8+1:(t_idx-2)*8+8,:);
    pos = [pos S(1,:)'];
    vel = [vel S(2,:)'];
    acc = [acc S(3,:)'];
end
figure(3)
clf
p_lims = max(max(abs(pos)));
plot(pos(1,:),pos(2,:),'k-')
hold on
plot(pos(1,1),pos(2,1),'bo')
plot(pos(1,end),pos(2,end),'ro')
grid on
axis equal
xlim([-p_lims p_lims])
ylim([-p_lims p_lims])
xlabel('x')
ylabel('y')
title('Minimum Snap Trajectory')
legend('Path','Beginning','End')
%}